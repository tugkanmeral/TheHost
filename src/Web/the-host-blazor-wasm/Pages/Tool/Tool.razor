@page "/tool"
@inject HttpClient Http
@inject StateContainer StateContainer

<PageTitle>Tool</PageTitle>

<h1>Tools</h1>

<div class="container">
    <div class="row">
        <div class="col-6">
            <div class="border rounded p-3">
                <h4>Guid</h4>
                <p>@(newGuid ?? "Guid appear here...")</p>
                <div class="button-to-right-container">
                    <button class="btn btn-primary" @onclick="generateGuid">Generate guid</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string? newGuidUrl;

    private string? newGuid;

    protected override void OnInitialized()
    {
        getRoutes();
    }

    private void getRoutes()
    {
        var toolRoute = StateContainer.Routes?.Where(x => x.Service == "Tool").SingleOrDefault();

        if (toolRoute == null)
            return;

        newGuidUrl = getRoute(toolRoute, "newGuid");
    }

    private string getRoute(TheHostRouteModel theHostRoute, string routeName)
    {
        return theHostRoute.Url + theHostRoute.EndPoints.Where(x => x.Name == routeName).Single()?.Url;
    }

    private async Task generateGuid()
    {
        newGuid = await Http.GetStringAsync(newGuidUrl);
    }
}
