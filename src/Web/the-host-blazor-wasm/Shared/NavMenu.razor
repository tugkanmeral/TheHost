@inject IJSRuntime JsRuntime
@inject StateContainer StateContainer

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">the-host-blazor-wasm</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        @if (isLoggedIn)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="password">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Password
                </NavLink>
            </div>
        }
        else
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Login
                </NavLink>
            </div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private LocalStorageManager? localStorageManager;
    private bool isLoggedIn = false;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override async Task OnInitializedAsync()
    {
        localStorageManager = new LocalStorageManager(JsRuntime);
        var token = await localStorageManager.GetAsync<string>("token");
        if (!String.IsNullOrWhiteSpace(token))
            isLoggedIn = true;

        StateContainer.OnTokenChange += tokenChanged;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void tokenChanged()
    {
        if (!String.IsNullOrWhiteSpace(StateContainer.Token))
        {
            isLoggedIn = true;
            StateHasChanged();
        }

    }
}
